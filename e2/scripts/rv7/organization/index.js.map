{"version":3,"names":[],"mappings":"","sources":["index.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n/*global document, require*/\nvar Header = require('./globals/modules/Header');\nvar ScrollNav = require('./globals/modules/ScrollNav');\n\n(function () {\n   'use strict';\n\n   var navbar = document.getElementsByClassName('navbar')[0].parentNode;\n   new Header('menu');\n   new Header('search');\n   Header.addSubmenu();\n   new ScrollNav(navbar, 150);\n})();\n\n},{\"./globals/modules/Header\":2,\"./globals/modules/ScrollNav\":4}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*jshint -W032 */ /* ignore unnecessary semicolon */\nvar Helper = require('./Helper');\n\nvar Header = function () {\n    function Header(section) {\n        _classCallCheck(this, Header);\n\n        //This is for main navbar\n        this.section = section;\n        this.sectionBtn = document.getElementsByClassName(section + '-button')[0];\n        this.sectionWin = document.getElementsByClassName(section + '-window')[0];\n        this.headerElem = document.getElementsByTagName('header')[0];\n        this.navbtns = document.getElementsByClassName('nav-button');\n        this.navwins = document.getElementsByClassName('nav-window');\n        this.sectionBtn.addEventListener('click', this.toggleNavOption.bind(this), false);\n    }\n\n    _createClass(Header, [{\n        key: 'toggleNavOption',\n        value: function toggleNavOption() {\n            var body = document.getElementsByTagName('body')[0],\n                html = document.getElementsByTagName('html')[0],\n                i = 0,\n                secClass = this.sectionBtn.className,\n                sectionOpen = secClass.indexOf('close-button') === -1;\n\n            for (i = 0; i < this.navbtns.length; i++) {\n                Helper.removeClass(this.navbtns[i], 'close-button');\n                Helper.removeClass(this.navwins[i], 'open-window');\n                Helper.removeClass(html, 'menu-open');\n                Helper.removeClass(body, 'menu-open');\n            }\n            if (sectionOpen) {\n                Helper.addClass(this.sectionBtn, 'close-button');\n                Helper.addClass(this.sectionWin, 'open-window');\n                if (this.section === 'search') {\n                    document.getElementById('query').focus();\n                } else {\n                    Helper.addClass(html, 'menu-open');\n                    Helper.addClass(body, 'menu-open');\n                }\n            }\n        }\n    }], [{\n        key: 'addSubmenu',\n        value: function addSubmenu() {\n            var items = document.getElementsByClassName('menu-item'),\n                i = 0,\n                lastClass,\n                li;\n            for (i; i < items.length; i++) {\n                // function is inside loop because it would not work outside\n                // -- you need to add the event listener to each menu item\n                items[i].addEventListener('click', function () {\n                    // a click on the span shouldn't register since we only add the event listener to the anchors\n                    li = this.parentNode;\n                    lastClass = Helper.hasClass(li, 'social') ? 'social ' : '';\n                    li.className = !Helper.hasClass(li, 'expanded') ? lastClass + 'expanded' : lastClass;\n                }, false);\n            }\n        }\n    }]);\n\n    return Header;\n}();\n\n;\n\nexports.default = Header;\n\n},{\"./Helper\":3}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*jshint -W032 */ /* ignore unnecessary semicolon */\n\nvar Helper = function () {\n    function Helper() {\n        _classCallCheck(this, Helper);\n    }\n\n    _createClass(Helper, null, [{\n        key: 'hasClass',\n        value: function hasClass(el, className) {\n            if (el.classList) return el.classList.contains(className);else return !!el.className.match(new RegExp('(\\\\s|^)' + className + '(\\\\s|$)'));\n        }\n    }, {\n        key: 'addClass',\n        value: function addClass(el, className) {\n            if (el.classList) el.classList.add(className);else if (!this.hasClass(el, className)) el.className += ' ' + className;\n        }\n    }, {\n        key: 'removeClass',\n        value: function removeClass(el, className) {\n            if (el.classList) el.classList.remove(className);else if (this.hasClass(el, className)) {\n                var reg = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n                el.className = el.className.replace(reg, ' ');\n            }\n        }\n    }]);\n\n    return Helper;\n}();\n\n;\n\nexports.default = Helper;\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*jshint -W032 */ /* ignore unnecessary semicolon */\nvar Helper = require('./Helper');\n/**\n * Toggle class name on element as user scrolls page\n */\n\nvar ScrollNav = function () {\n\n    /**\n     * elem {obj}           - DOM element to add scroll class to\n     * minTop {int}         - minimum px distance from top of page to start\n                              adding scroll class\n     */\n\n    function ScrollNav(elem, minTop) {\n        _classCallCheck(this, ScrollNav);\n\n        this.navElem = elem;\n        // window.pageYOffset for all browsers, except IE9 and lower\n        this.scrollPos = window.pageYOffset !== undefined ? window.pageYOffset : document.documentElement.scrollTop;\n        this.minTop = !minTop ? 0 : minTop;\n        this.minScroll = 25; // minimum scrolling distance before transitioning\n        window.addEventListener('scroll', this.runOnScroll.bind(this));\n        this.runOnScroll(this);\n    }\n\n    _createClass(ScrollNav, [{\n        key: 'runOnScroll',\n        value: function runOnScroll(e) {\n            var newPos = window.pageYOffset !== undefined ? window.pageYOffset : document.documentElement.scrollTop,\n                navOpen = document.getElementsByClassName('open-window');\n\n            if (!navOpen.length) {\n                // scrolling down\n                if (this.scrollPos + this.minScroll <= newPos && newPos > this.minTop) {\n                    Helper.addClass(this.navElem, 'scrolled-down');\n                    this.scrollPos = newPos;\n                    // scrolling up\n                } else if (this.scrollPos - this.minScroll >= newPos) {\n                        Helper.removeClass(this.navElem, 'scrolled-down');\n                        this.scrollPos = newPos;\n                    }\n            }\n        }\n    }]);\n\n    return ScrollNav;\n}();\n\n;\n\nexports.default = ScrollNav;\n\n},{\"./Helper\":3}]},{},[1]);\n"],"file":"index.js","sourceRoot":"/source/"}